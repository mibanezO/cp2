---
- name: Agregando puertos a firewall en master
  firewalld:
    port: "{{item}}"
    permanent: yes
    state: enabled
    immediate: yes
  loop:
    - 6443/tcp
    - 2379/tcp
    - 2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10255/tcp
 
- name: Reiniciar firewall
  command: firewall-cmd --reload

- name: Configurando kubeadm
  command: kubeadm config images pull

- name: Permitir acceso desde workers
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    rich_rule: "{{ item }}"
  with_items: "{{ workers_rule }}"

- name: Reiniciar firewall
  command: firewall-cmd --reload

- name: Permitir acceso de contenedores a localhost
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    rich_rule: "{{ kube_perm_workers_rule }}" 
  #with_items:
  #  - 'rule family=ipv4 source address=172.17.0.1/16 accept'

- name: Verificar si kubeadm esta iniciado
  stat:
    path: /etc/kubernetes/pki/ca.key
  register: k8adm_ca

- name: Reiniciar firewall
  command: firewall-cmd --reload

- name: Inicializar el cluster en {{ pod_network_cidr }}
  shell: kubeadm init --pod-network-cidr {{ pod_network_cidr }} --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem
  args:
     chdir: $HOME
     creates: cluster_initialized.txt
  when: not k8adm_ca.stat.exists
  run_once: yes

- name: Obtener token para ejecutar join en workers
  shell: kubeadm token create --print-join-command
  register: kubernetes_join_command

- name: Imprimir token
  debug:
     var: kubernetes_join_command.stdout

- name: Copiar token a un archivo local
  local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777

#- name: Agregando al comando join
#  lineinfile:
#    path: /tmp/kubernetes_join_command
#    line: --ignore-preflight-errors='DirAvailable--etc-kubernetes-manifests,FileAvailable--etc-kubernetes-kubelet.conf,Port-10250,FileAvailable--etc-kubernetes-pki-ca.crt'

- name: export KUBECONFIG
  shell: "export KUBECONFIG=/etc/kubernetes/admin.conf"

- name: "Creando directorio .kube"
  command: 
    cmd: "mkdir -p $HOME/.kube"
    warn: no

- name: "Copiando archivo admin.conf al directorio .kube"
  command: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

- name: "Cambiando propietario al directorio .kube"
  shell: 
     cmd: "chown $(id -u):$(id -g) $HOME/.kube/config"
     warn: no

